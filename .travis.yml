# sudo: true
dist: xenial

language: rust

cache:
  cargo: true
  apt: true

# rust:
#   - stable
#   - beta
#   - nightly

addons:
  apt:
    sources:
    # - sourceline: 'ppa:chris-lea/libsodium'
    # - sourceline: 'ppa:alexhuang/libzmq'
    packages:
      # Cargo coverage dependencies
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
      # Dependencies for Mjolnir
      - protobuf-compiler
      - libprotobuf-dev
      - libsodium-dev
      - libzmq3-dev
install:
  # - cargo install -f cargo-travis
  - export PATH=$HOME/.cargo/bin:$PATH

script:
  # - cargo test --all --verbose
  # - if [ "$TRAVIS_RUST_VERSION" == "stable" ]; then cargo coveralls --exclude-pattern tests/,mjolnir-api/src/proto/mjolnir.rs,mjolnir-api/src/proto/plugin.rs,mjolnir-api/src/proto/agent.rs --all; fi

# TODO : Re-enable functional builds

jobs:
  include:
    - stage: functional
      script:
      # - sudo apt-get install snapd > /dev/null 2>&1
      # - sudo snap install lxd --channel=stable > /dev/null 2>&1
      # - export PATH=/snap/bin/:${PATH}
      - sudo lxd waitready --timeout 60
      - sudo lxd init --auto
      - sudo lxc profile set default core.proxy_http
      - sudo lxc profile set default user.network_mode
      - sudo chown -R travis /home/travis/.config/lxc
      # - sudo chmod 777 /var/snap/lxd/common/lxd/unix.socket
      - sudo usermod -a -G lxd travis
      - sudo su travis -c 'PATH=/snap/bin/:${PATH} VERBOSE=true tests/run.sh'

# after_success: |
#   if [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
#     cargo coveralls --exclude-pattern tests/,mjolnir-api/src/proto/mjolnir.rs,mjolnir-api/src/proto/plugin.rs,mjolnir-api/src/proto/agent.rs  --all
#   fi

# Could do this to provide trusty debs

# before_deploy: |
#   test $TRAVIS_TEST_RESULT = 0 \
#   test $TRAVIS_RUST_VERSION = "stable" \
#   test $TRAVIS_TAG \
#   cargo install cargo-deb &&
#   cargo deb

# deploy:
#   provider: releases
#   api_key: "GITHUB OAUTH TOKEN"
#   file: "/target/release/
#   skip_cleanup: true
#   on:
#     tags: true
#     rust: stable